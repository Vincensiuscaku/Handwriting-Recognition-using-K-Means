# -*- coding: utf-8 -*-
"""Handwriting_Recognition using K-Means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SJ-X966DqumKX2YCG7bvZprPfO6cy0XE

# **Getting Started with the Digits Dataset**
"""

import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets

digits = datasets.load_digits()
print(digits)

print(digits.DESCR)

print(digits.data)

print(digits.target)

plt.gray()

plt.matshow(digits.images[100])

plt.show()

print(digits.target[100])

"""# **K-Means Clustering**"""

from sklearn.cluster import KMeans

model = KMeans(n_clusters=10, random_state=42)

model.fit(digits.data)

fig = plt.figure(figsize=(8, 3))

fig.suptitle('Cluser Center Images', fontsize=14, fontweight='bold')

for i in range(10):

  # Initialize subplots in a grid of 2X5, at i+1th position
  ax = fig.add_subplot(2, 5, 1 + i)

  # Display images
  ax.imshow(model.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)

plt.show()

"""# **Testing Model**"""

new_samples = np.array([
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.08,1.45,0.00,0.00,0.00,0.00,0.00,1.37,5.34,6.10,0.00,0.00,0.00,0.00,0.00,3.81,4.50,6.10,0.00,0.00,0.00,0.00,0.00,0.00,0.76,6.10,0.00,0.00,0.00,0.00,0.00,0.00,0.76,6.10,0.00,0.00,0.00,0.00,0.00,0.00,0.08,1.45,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,3.05,0.00,0.00,0.00,0.00,0.00,0.00,3.81,7.62,0.00,0.00,0.00,0.00,0.00,0.00,3.58,7.17,0.08,0.00,0.00,0.00,0.00,0.00,0.00,6.10,1.53,0.00,0.00,0.00,0.00,0.00,0.00,4.27,3.81,0.00,0.00,0.00,0.00,0.00,0.00,1.22,2.90,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,3.81,0.00,0.00,0.00,0.00,0.00,0.23,4.81,7.62,0.08,0.00,0.00,0.00,0.00,0.23,3.51,6.10,1.91,0.00,0.00,0.00,0.00,0.00,0.00,3.66,4.42,0.00,0.00,0.00,0.00,0.00,0.00,1.07,6.41,0.00,0.00,0.00,0.00,0.00,0.00,0.00,2.21,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
[0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.53,6.71,0.00,0.00,0.00,0.00,0.00,0.00,5.19,7.62,0.00,0.00,0.00,0.00,0.00,0.00,5.26,6.79,0.76,0.00,0.00,0.00,0.00,0.00,0.00,5.49,1.83,0.00,0.00,0.00,0.00,0.00,0.00,4.50,2.82,0.00,0.00,0.00,0.00,0.00,0.00,0.53,0.30,0.00,0.00,0.00]
])

new_labels = model.predict(new_samples)

print(new_labels)

for i in range(len(new_labels)):
  if new_labels[i] == 0:
    print(0, end='')
  elif new_labels[i] == 1:
    print(9, end='')
  elif new_labels[i] == 2:
    print(2, end='')
  elif new_labels[i] == 3:
    print(1, end='')
  elif new_labels[i] == 4:
    print(6, end='')
  elif new_labels[i] == 5:
    print(8, end='')
  elif new_labels[i] == 6:
    print(4, end='')
  elif new_labels[i] == 7:
    print(5, end='')
  elif new_labels[i] == 8:
    print(7, end='')
  elif new_labels[i] == 9:
    print(3, end='')